input {
  beats
 {
    port => 5044
    host => logstash
  }
}

filter {
  if [service][type] == "nginx" {
    if [fileset][name] == "access" {
      grok {
        match => { "message" => [
                 "%{IPV4:[nginx][access][remote_ip]} %{HOSTNAME:[nginx][access][host]} (?:-|%{NOTSPACE:[nginx][access][ssl_protocol]}) %{DATA:[nginx][access][remote_user]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" %{QS:[nginx][access][request_body]} %{BASE10NUM:[nginx][access][request_time]} %{BASE10NUM:[nginx][access][upstream_response_time]}",
                 "%{IPV4:[nginx][access][remote_ip]} %{HOSTNAME:[nginx][access][host]} (?:-|%{NOTSPACE:[nginx][access][ssl_protocol]}) %{DATA:[nginx][access][remote_user]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" %{QS:[nginx][access][request_body]} %{BASE10NUM:[nginx][access][request_time]} -",
                 "%{IPV4:[nginx][access][remote_ip]} %{HOSTNAME:[nginx][access][host]} (?:-|%{NOTSPACE:[nginx][access][ssl_protocol]}) %{DATA:[nginx][access][remote_user]} \t\[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" %{QS:[nginx][access][request_body]} %{BASE10NUM:[nginx][access][request_time]} %{BASE10NUM:[nginx][access][upstream_response_time]}"
        ]}
        remove_field => "message"
      }
      mutate {
        add_field => { "read_timestamp" => "%{@timestamp}" }
      }
      date {
        match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        target => "@timestamp"
        remove_field => "[nginx][access][time]"
      }
      useragent {
        source => "[nginx][access][agent]"
        target => "[nginx][access][user_agent]"
        remove_field => "[nginx][access][agent]"
      }
      geoip {
        source => "[nginx][access][remote_ip]"
       target => "[nginx][access][geoip]"
       }
       mutate {
          convert => {
            "[geoip][location][lon]" => "float"
            "[geoip][location][lat]" => "float"
            "[nginx][access][http_version]" => "float"
            "[nginx][access][response_code]" => "integer"
            "[nginx][access][body_sent][bytes]" => "integer"
            "[nginx][access][request_time]" => "float"
            "[nginx][access][upstream_response_time]" => "float"
        }
      }
    }
  }
}


output {
 if [service][type] == "nginx" {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "elastic"
    password => "pass"
    manage_template => false
    index => "webcluster-nginx-%{+YYYY.MM.dd}"
 }
}
  else {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "elastic"
    password => "pass"
    manage_template => false
    index => "webcluster-system-%{+YYYY.MM.dd}"
  }
 }
}
